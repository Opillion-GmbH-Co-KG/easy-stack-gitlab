name: Build Prod Images

on:
  workflow_dispatch:
    inputs:
      prodImageTag:
        description: 'Prod image tag'
        required: true
        default: 'easyStackMiniProd-GITLAB'
      baseImageTag:
        description: 'Tag for the base image'
        required: true
        default: 'easyStackBase001'
      containers:
        description: 'Containers you want to .build'
        required: true
        default: 'gitlab,gitlab-runner'


jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions: write-all
    name: .build-and-test
    environment: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make

      - name: Build stack
        run: |
          export START_ENV=prod
          make start

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_REPO_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build and push current .build as prod image
        timeout-minutes: 10
        run: |
          IFS=',' read -r -a containers <<< "${{ github.event.inputs.containers }}"
          USER_ID="1000"
          GROUP_ID="1001"
          DOCKER_REPO_USER="${{ secrets.DOCKER_REPO_USER }}"
          DOCKER_PASS="${{ secrets.DOCKER_PASS }}"

          BASE_IMAGE_TAG="${{ github.event.inputs.baseImageTag }}"
          PROD_IMAGE_TAG="${{ github.event.inputs.prodImageTag }}"
          DOCKER_USER="docker"
          PLATFORMS="linux/amd64"
          CONTAINER_NAME_ID="$DOCKER_REPO_USER-image"
          DOCKER_IMAGE_SOURCE="prod"
          BUILD_IMAGE_TAG=$PROD_IMAGE_TAG

          for container in "${containers[@]}"; do
            echo "Building Stack for Container: $container"
            docker buildx build \
            --platform $PLATFORMS \
            -t $DOCKER_REPO_USER/$container:$BUILD_IMAGE_TAG \
            --build-arg DOCKER_USER=$DOCKER_USER \
            --build-arg USER_ID=$USER_ID \
            --build-arg GROUP_ID=$GROUP_ID \
            --build-arg BASE_IMAGE_TAG=$BASE_IMAGE_TAG \
            --build-arg PROD_IMAGE_TAG=$PROD_IMAGE_TAG  \
            -f .docker/$DOCKER_IMAGE_SOURCE/$container.Dockerfile \
            --push .
            echo "Build done for: $container"
          done

          echo "All Containers build, tagged and pushed to $DOCKER_REPO_USER!"
